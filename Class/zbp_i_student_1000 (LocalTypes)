CLASS lhc_academicresult DEFINITION INHERITING FROM cl_abap_behavior_handler.

  PRIVATE SECTION.

    METHODS updateCourseDuration_body FOR DETERMINE ON SAVE
      IMPORTING keys FOR AcademicResult~updateCourseDuration_body.

ENDCLASS.

CLASS lhc_academicresult IMPLEMENTATION.

  METHOD updateCourseDuration_body.
  ENDMETHOD.

ENDCLASS.

CLASS lhc_ZI_STUDENT_1000 DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PUBLIC SECTION.

    DATA lv_token TYPE string.
    DATA : iv_url       TYPE string.
    DATA: oref TYPE REF TO cx_root,
          text TYPE string.

    TYPES: BEGIN OF ty_final,
             acces_token TYPE string,
           END OF ty_final.

    DATA: ls_final TYPE ty_final,
          lt_final TYPE TABLE OF ty_final.


    DATA: lr_data   TYPE REF TO data.

    DATA: lv_client_id     TYPE string,
          lv_client_secret TYPE string.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zi_student_1000 RESULT result.
    METHODS get_instance_features FOR INSTANCE FEATURES
      IMPORTING keys REQUEST requested_features FOR student RESULT result.

    METHODS setadmitted FOR MODIFY
      IMPORTING keys FOR ACTION student~setadmitted RESULT result.
    METHODS validateage FOR VALIDATE ON SAVE
      IMPORTING keys FOR student~validateage.
    METHODS courseduration FOR DETERMINE ON SAVE
      IMPORTING keys FOR student~courseduration.
    METHODS courseduration_update FOR DETERMINE ON MODIFY
      IMPORTING keys FOR student~courseduration_update.
    METHODS courseduration_delete FOR DETERMINE ON MODIFY
      IMPORTING keys FOR student~courseduration_delete.

ENDCLASS.

CLASS lhc_ZI_STUDENT_1000 IMPLEMENTATION.

  METHOD get_instance_authorizations.

  ENDMETHOD.

  METHOD get_instance_features.

    READ ENTITIES OF zi_student_1000 IN LOCAL MODE
    ENTITY Student
    FIELDS ( Status ) WITH CORRESPONDING #( keys )
    RESULT DATA(studentadmitted)
    FAILED failed.


    result =
    VALUE #(
    FOR stud IN studentadmitted
    LET statusval = COND #( WHEN stud-Status = abap_true
                            THEN if_abap_behv=>fc-o-disabled
                            ELSE if_abap_behv=>fc-o-enabled )

                            IN ( %tky = stud-%tky
                            %action-setAdmitted = statusval
                            )
    ).
  ENDMETHOD.

  METHOD setAdmitted.


    MODIFY ENTITIES OF zi_student_1000 IN LOCAL MODE
    ENTITY Student
    UPDATE
    FIELDS ( Status )
    WITH VALUE #( FOR key IN keys ( %tky = key-%tky Status = abap_true ) )

    FAILED failed
    REPORTED reported.

    "ekrana getirebilmek için okumak gerekiyor
    READ ENTITIES OF zi_student_1000 IN LOCAL MODE
    ENTITY Student
    ALL FIELDS WITH CORRESPONDING #( keys )
    RESULT DATA(studentdata).
    result =  VALUE #(  FOR studentrec IN studentdata
    ( %tky = studentrec-%tky %param = studentrec )
    ).

  ENDMETHOD.

  METHOD validateAge. "post isteği atıldıktan sonra burada doğrulama alınır.

    READ ENTITIES OF zi_student_1000 IN LOCAL MODE
    ENTITY Student
    FIELDS ( Age ) WITH CORRESPONDING #( keys )
    RESULT DATA(studentsAge).

    LOOP AT studentsAge INTO DATA(ls_studentAge).

      IF ls_studentage-Age < 21.
        APPEND VALUE #( %tky = ls_studentage-%tky ) TO failed-student.

        APPEND VALUE #( %tky = keys[ 1 ]-%tky
                        %msg = new_message_with_text(
                        severity = if_abap_behv_message=>severity-error
                        text = 'Yaş 25 den küçük olamaz'
                        ) )
                        TO reported-student.
      ENDIF.
    ENDLOOP.


  ENDMETHOD.


  METHOD CourseDuration.

    READ ENTITIES OF zi_student_1000 IN LOCAL MODE
   ENTITY Student
   FIELDS ( Course ) WITH CORRESPONDING #( keys )
   RESULT DATA(studentsCourse).

    LOOP AT studentsCourse INTO DATA(ls_stcourse).

      IF ls_stcourse-Course = 'Computers'.

        MODIFY ENTITIES OF zi_student_1000 IN LOCAL MODE
        ENTITY Student
        UPDATE
        FIELDS ( Courseduration )
        WITH VALUE #( ( %tky = ls_stcourse-%tky Courseduration = 5 ) ).
      ENDIF.

      IF ls_stcourse-Course = 'Electronics'.

        MODIFY ENTITIES OF zi_student_1000 IN LOCAL MODE
        ENTITY Student
        UPDATE
        FIELDS ( Courseduration )
        WITH VALUE #( ( %tky = ls_stcourse-%tky Courseduration = 3 ) ).

      ENDIF.

    ENDLOOP.

  ENDMETHOD.

   METHOD CourseDuration_update.

    READ ENTITIES OF zi_student_1000 IN LOCAL MODE
    ENTITY Student
    FIELDS ( Firstname ) WITH CORRESPONDING #( keys )
    RESULT DATA(studentsId).

  ENDMETHOD.

  METHOD CourseDuration_delete.
  ENDMETHOD.

ENDCLASS.
